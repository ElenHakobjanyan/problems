#include <iostream>
double aver(int* res, int sz)
{
	double temp=0;
	for (int i = 0; i < sz; i++)
	{
		temp = temp +res[i];
	}
	return temp/sz;
}

int most_rep(int* res, int sz)
{
	int max = 0, index=0;
	for (int i = 0; i < sz; i++)
	{
		int count = 0;
		for (int j = 0; j < sz; j++)
		{
			if (res[i] == res[j]) count++;
		}
		if (count > max)
		{
			max = count;
			index = i;
		}
	}
	return res[index];
}

int div_rem(int* res, int sz)
{
	int c = 0;
	for (int i = 0; i < sz; i++)
	{
		if (res[i] % i == 0) c++;
	}
	return c;
}

int first_negative(int* res, int sz)
{
	
	for (int i = 0; i < sz; i++)
	{
		if (res[i] < 0) return i;
	}
	return -1;
}
int last_zero(int* res, int sz)
{
	int index = -1;
	for (int i = 0; i < sz; i++)
	{
		if (res[i] == 0) index = i;
	}
	return index;
}

int main()
{
	int size = 10;
	int* arr = new int [size];
	for (int i = 0; i < size; i++)
	{
		arr[i] = i;
		
	}
	
	
	std::cout << div_rem(arr,size) << "\n";
	return 0;
}
